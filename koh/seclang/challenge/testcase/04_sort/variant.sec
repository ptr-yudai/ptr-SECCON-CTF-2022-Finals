func cmp(x, y) {
    if x > y { return -1; }
    else if x == y { return 0; }
    else { return 1; }
}

func sort(mem, len, f) {
    i = 0;
    buf = 0;
    changed = 1;

    while changed == 1 {
        changed = 0;
        i = 1;
        while i < len {
            if f(mem[i-1], mem[i]) == -1 {
                buf = mem[i];
                mem[i] = mem[i-1];
                mem[i-1] = buf;

                changed = 1;
            }
            i = i + 1;
        }
        if changed == 0 {
            break;
        }
    }
}

func main() {
  x = 0;
	xs = [0 as int; 0x100];
  shellcode = [${randint(0, 0x7fffffffffffffff)}, ${randint(0, 0x7fffffffffffffff)}, ${randint(0, 0x7fffffffffffffff)}, ${randint(0, 0x7fffffffffffffff)}];
  shellcode[x];
	len = scan();
    i = 0;
    while i < len {
        xs[i] = scan();
        i = i + 1;
    }

    sort(xs, len, cmp);

    i = 0;
    while i < len {
        print(xs[i]);
        print("\n");
        i = i + 1;
    }

	return 0;
}
